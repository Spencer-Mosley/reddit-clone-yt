rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function tenantAdminCheck(tenantId) {
      // Get the tenantAdmins document for the current user
      let tenantAdminsDoc = get(/databases/$(database)/documents/tenantAdmins/$(request.auth.uid));
      
      // Check if the tenantId is in the tenants list of the tenantAdmins document
      return tenantId in tenantAdminsDoc.data.tenants;
    }

    // Use the tenantAdminCheck function in your rules'
    function isUserInClassroom(classroomId) {
      return false;
      }

    
    match /posts/{postId} {
  allow read: if  tenantAdminCheck(resource.data.tenantId)  ;  
  //allow read: if isUserInClassroom(resource.data.classroomId);
  allow create: if isUserInClassroom(request.resource.data.classroomId);
  allow update: if isUserInClassroom(request.resource.data.classroomId)  
                || isUserAdmin()
                && request.resource.data.diff(resource.data).affectedKeys().hasAny(['isDeleted', 'commenterTokens']);
}
    
    match /users/{userId} {
  allow create: if true; // Allows creation only if the user is authenticated.
  allow get: if request.auth.uid != null;
  allow read: if tenantAdminCheck(resource.data.tenantId);
}

match /tenantAdmins/{userId} {
  allow read: if true;
}




  }
}